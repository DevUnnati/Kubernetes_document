Exercise: TLS Termination
Objective:

Enable TLS termination on the Ingress.
Use a self-signed certificate for simplicity.
Instructions:

Generate a Self-Signed Certificate:

Use OpenSSL or any tool of your choice to generate a self-signed SSL certificate. Save the private key and certificate in separate files.
Do not include passphrase for simplicity.
Create a Kubernetes Secret:

Create a Kubernetes Secret named tls-secret to store the generated SSL certificate and private key.
Use the kubectl create secret tls command.
Update the Ingress Resource:

Update the existing Ingress resource (basic-ingress.yaml) to include TLS configuration. Use the secret tls-secret you created.
Configure the Ingress to route traffic based on the hostname secure.example.com.
Map the path / to the sample-service with a pathType of Prefix.
Apply the Ingress with TLS:

Apply the updated Ingress resource with TLS configuration.

Update Hosts File:

If needed, update your local hosts file to include the Ingress controller's IP.
Access the Secured URL:
---------------------------------------------------------------------------------------------------------------------------------------------

Solution:

a) Use OpenSSL or any tool of your choice to generate a self-signed SSL certificate. Save the private key and certificate in separate files.
command:
Step1:  openssl genpkey -algorithm RSA -out private_key.pem
Step2:  openssl req -new -key private_key.pem -out certificate.csr
Step3:  openssl x509 -req -days 365 -in certificate.csr -signkey private_key.pem -out certificate.pem

b) Create a Kubernetes Secret named tls-secret to store the generated SSL certificate and private key.
command: 
    kubectl create secret tls tls-secret --cert=certificate.pem --key=private_key.pem

c) Update the existing Ingress resource (basic-ingress.yaml) to include TLS configuration. Use the secret tls-secret you created.
Configure the Ingress to route traffic based on the hostname secure.example.com.
Map the path / to the sample-service with a pathType of Prefix.
---
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: tls-example-ingress
      annotations:
         nginx.ingress.kubernetes.io/rewrite-target: /
    spec:
     ingressClassName: nginx
     tls:
      - hosts:
        - hello.com
     secretName: tls-secret
     rules:
     - host: hello.com
       http:
         paths:
         - path: /
           pathType: Prefix
           backend:
             service:
               name: nginx1
               port:
                 number: 80
d) Apply the updated Ingress resource with TLS configuration.
commad: kubectl apply -f ingress.yaml

e) If needed, update your local hosts file to include the Ingress controller's IP.
command: echo 172.30.1.2 hello.com > /etc/hosts

f) Access the Secured URL:
command: curl -lv https://hello.com/

---------------------------------------------------------------------------------------------------------
# role.yaml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: pod-reader-1
rules:
- apiGroups: [""]
  #
  # at the HTTP level, the name of the resource for accessing the Secret
  # objects is "secrets"
  resources: ["pods"]
  verbs: ["get", "watch", "list"]

  --------------------------------------------------------------------------------------------------------
  # rolebinding.yaml
  ---
  apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: read-pods-service
  namespace: default
subjects:
- kind: ServiceAccount
  name: sa1
  namespace: default
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: pod-reader-1 # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
-------------------------------------------------------------------------------------------------------
# serviceaccount
kubectl create serviceaccount sa1
----------------------------------------------------------------------------------------------------------
#Verfication
kubectl auth can-i get pods --as system:serviceaccount:default:sa1 -n default
--------------------------------------------------------------------------------------------------------
